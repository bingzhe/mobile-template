@import "./variables.scss";
// 部分转换参照，里面还有一些功能函数：https://github.com/W3cplus/SassMagic 
// 删除数字单位
@function strip-units($number) {
    @return $number / ($number * 0 + 1);
}

//字符串转数字
@function unit-length($number, $unit) {
    $strings: 'px' 'cm' 'mm' '%' 'ch' 'pica' 'in' 'em' 'rem' 'pt' 'pc' 'ex' 'vw' 'vh' 'vmin' 'vmax';
    $units: 1px 1cm 1mm 1% 1ch 1pica 1in 1em 1rem 1pt 1pc 1ex 1vw 1vh 1vmin 1vmax;
    $index: index($strings, $unit);
    @if not $index {
        @warn "Invalid unit `#{$unit}`.";
        @return false;
    }
    @return $number * nth($units, $index);
}

@function number($string) {
    // Matrices
    $strings: '0' '1' '2' '3' '4' '5' '6' '7' '8' '9';
    $numbers: 0 1 2 3 4 5 6 7 8 9; // Result
    $result: 0;
    $divider: 0;
    $minus: false; // Looping through all characters
    @for $i from 1 through str-length($string) {
        $character: str-slice($string, $i, $i);
        $index: index($strings, $character);
        @if $character=='-' {
            $minus: true;
        }
        @else if $character=='.' {
            $divider: 1;
        }
        @else {
            @if not $index {
                $result: if($minus, $result * -1, $result);
                @return unit-length($result, str-slice($string, $i));
            }
            $number: nth($numbers, $index);
            @if $divider==0 {
                $result: $result * 10;
            }
            @else {
                // Move the decimal dot to the left
                $divider: $divider * 10;
                $number: $number / $divider;
            }
            $result: $result+$number;
        }
    }
    @return if($minus, $result * -1, $result);
}

//转换px到rem或em
@function convert($unit, $value, $base-font-size:null) {
    $value: strip-units($value) / strip-units($base-font-size) * number(1 + $unit);
    @if ($value==(0 + $unit)) {
        $value: 0;
    }
    @return $value;
}

//px到rem
@function px2rem($value, $base-font-size: 75px) {
    @return convert("rem", $value, $base-font-size);
}

//px到em
@function px2em($value, $base-font-size: 75px) {
    @return convert("rem", $value, $base-font-size);
}

//宽高
@mixin wh($width, $height) {
    width: $width;
    height: $height;
}

// 字体大小
@mixin fc($size, $color) {
    font-size: $size;
    color: $color;
}

//上左偏移
@mixin tl($top, $left) {
    top: $top;
    left: $left;
}

// 移动端文本字体
@mixin font-dpr($font-size) {
    font-size: $font-size;
    [data-dpr="2"] & {
        font-size: $font-size * 2;
    }
    [data-dpr="3"] & {
        font-size: $font-size * 3;
    }
}

//这里是负责图片的不同dpr下显示高清问题
//这是图片的mixin,也是类似,不过这里是图片根据dpr来进行适配
@mixin bg-image($url) {
    background-image: url($url + "@2x.png");
    @media (-webkit-min-device-pixel-ratio: 3), (min-device-pixel-ratio: 3) {
        background-image: url($url + "@3x.png");
    }
}
